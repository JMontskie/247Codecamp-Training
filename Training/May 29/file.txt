


I. Lessons from Git & GitHub Tutorial for Beginners #1 - Why Use Git? (URL: https://www.youtube.com/watch?v=3RjQznt-8kE&list=PL4cUxeGkcC9goXbgTDQ0n_4TBzOO0ocPR)

1. Git helps a developer save a lot of time (stores various versions of a project in a folder)
2. works on many features without messing up the main codebase (thru branching)
3. allows collaboration
4. Edits can be downloaded by various developers and reuploaded with the edits
5. Atom - an ideal text editor because it's free, cool, and customizable. 

II. Functions/commands learned from Git & GitHub Tutorial for Beginners #2 - Installing Git (URL: https://www.youtube.com/watch?v=3RjQznt-8kE&list=PL4cUxeGkcC9goXbgTDQ0n_4TBzOO0ocPR)
Create a text file containing all the functions discussed on the video, and add at least a single sentence to describe each functions you listed.

1."cd .." - This function allows us to change directories 
e.g. "cd <insert name of directory>" - allows you to go to the particular directory named
2. ls ("dir" for windows)- lists everything inside a particular directory or folder
3. mkdir <insert name of directory> - creates a new directory
4. touch <name of file> (e.g. "touch index.html") 
- creates a file named index.html within a specified folder
- only possible with commander or Mac

5. <name of text editor> <name of file> (e.g. Atom index.html) - allows you to open a specified file with the text editor indicated
6. rm index.html - removes a file
7. rmdir - removes a directory

III. Terms and functions/commands learned from Git & GitHub Tutorial for Beginners #3 - How Git Works (URL: https://www.youtube.com/watch?v=iNP_KmOFqXs&list=PL4cUxeGkcC9goXbgTDQ0n_4TBzOO0ocPR&index=3)

1. repository - alsoe called "repo"
2. root repository - tracks changes to every single file within it
3. commit - creates a save point in your project

4. commit history - allows you to track your work progress through save points and go back to any of them if needed

IV. Git & GitHub Tutorial for Beginners #4  (URL: https://www.youtube.com/watch?v=v0Ch3yWQ-Zc&list=PL4cUxeGkcC9goXbgTDQ0n_4TBzOO0ocPR&index=4

1. git init - initializes an empty repository inside a chosen folder or a working directory. (Git is going to track any changes done within the initialized project folder.)

V. Git & GitHub Tutorial for Beginners #5 (URL: https://www.youtube.com/watch?v=KngvG8WzYLU&list=PL4cUxeGkcC9goXbgTDQ0n_4TBzOO0ocPR&index=5)

1. git status - This shows us which files are presently in the staging area and are waiting to be committed
2. git add <name of file> (e.g. "git add index.html") - This allows us to add the specified file to the staging area
3. git rm --cached index.html - removes a file from a staging area
4. git add .- This allows us to add multiple files to the staging area at the same time.


VI.  Terms and functions/commands learned from Git & GitHub Tutorial for Beginners #6 (Making commits - URL: https://www.youtube.com/watch?v=Fhgga2s_RmM&list=PL4cUxeGkcC9goXbgTDQ0n_4TBzOO0ocPR&index=6)

1. git commit 
-m "" - This enables us to create a descriptive status of what the commit is (e.g. changed background colors of images) 

2. git log 
- This shows us all the various commits we have made.

3. git log --oneline
- This shows us all of the various commits in our commit history and condense it ine one line. (with the short ID and the message for that id (e.g.  ab4a9c3 added index files)

4.


VII. Functions/commands learned fromGit & GitHub Tutorial for Beginners #7 (Rewinding to certain save points and undoing things - URL: https://www.youtube.com/watch?v=RIYrfkZjWmA&list=PL4cUxeGkcC9goXbgTDQ0n_4TBzOO0ocPR&index=7)

1. "git checkout <unique ID>" (e.g. git checkout ab4a9c3)
- Called checkout commmit, this command allows us to go back in time while showing the state of each code we have done
- any changes done here are read-only

2. "git revert <unique ID>" (e.g. git revert ab4a9c3)
Called, revert commit, this command can undo a certain commit.

3. "git reset <unique ID>" (e.g. git reset ab4a9c3)
- Considered the riskiest among the three functions, reset commit allows us to rewind and permanently delete earlier commits

4. git checkout master
- alows us to check out the master branch

5. shift + :wq + enter 
- allows us to get out of the screen***

6. "git reset <unique ID> --hard"
- This allows us to go back to the  specified commit but won't retain any kind of changes from the commit afterwards.


VIII. Functions/commands learned from Git & GitHub Tutorial for Beginners #8 (Branching/creating branches - URL: https://www.youtube.com/watch?v=QV0kVNvkMxc&list=PL4cUxeGkcC9goXbgTDQ0n_4TBzOO0ocPR&index=8)

1. 

IX.

X. 

XI.

XII. Functions/commands learned from Git & GitHub Tutorial for Beginners #12 (Collaborating on Github through forking - URL: https://www.youtube.com/watch?v=HbSjyU2vf6Y&list=PL4cUxeGkcC9goXbgTDQ0n_4TBzOO0ocPR&index=12)

1. git clone https://github.com/debbiednieto/247Codecamp-Training.git
2. git push origin master 